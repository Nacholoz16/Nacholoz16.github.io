---
import BaseLayout from "../../layouts/BaseLayout.astro";

import { ClientRouter, fade, slide } from 'astro:transitions';
import Card from "../../components/Card.astro";

// Función para obtener las rutas estáticas de los Pokémon
export async function getStaticPaths() {
  const response = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  const data = await response.json();

  const paths = data.results.map((pokemon: { name: string; url: string }) => {
    const id = pokemon.url.split("/").filter(Boolean).pop(); // Extrae el ID de la URL
    return { params: { id } };
  });

  return paths; // Devuelve directamente el array
}

// Obtiene los parámetros de la URL
const { id } = Astro.params;
const pokemonResponse = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);
const pokemon = await pokemonResponse.json();
---

<BaseLayout>
  <ClientRouter />

  <!-- Botón de regreso -->
  <a href="/pokemons" class="btn"><svg xmlns="http://www.w3.org/2000/svg" width="40" height="20" viewBox="0 -3 30 24"><path fill="currentColor" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="M10.296 6.889L4.833 11.18a.5.5 0 0 0 0 .786l5.463 4.292a.5.5 0 0 0 .801-.482l-.355-1.955c5.016-1.204 7.108 1.494 7.914 3.235c.118.254.614.205.64-.073c.645-7.201-4.082-8.244-8.57-7.567l.371-2.046a.5.5 0 0 0-.8-.483"/></svg>Volver</a>

  <main class="pokemon-page" transition:animate={slide({ duration: '0.4s' })}>
    <Card
      id={id}
      imageUrl={pokemon.sprites.versions["generation-v"]["black-white"].animated
        .front_default}
      alt={pokemon.name}
      name={pokemon.name}
      ,
      type={pokemon.types
        .map((typeInfo: { type: { name: string } }) => typeInfo.type.name)
        .join(", ")},

      height={pokemon.height}
      weight={pokemon.weight}
      link={false}
    />
  </main>
</BaseLayout>

<style>
  /* Estilos específicos para la página del Pokémon */
  .pokemon-page {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100%;
    padding: 2rem;
  }

  .btn {
  display: inline-block;

  padding: 0.75rem 1.5rem;
  font-weight: bold;
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 2px;
  color: #00d9ff;
  background: rgba(255, 255, 255, 0.411);
  border: 2px solid #00d9ff;
  border-radius: 10px;
  position: relative;
  overflow: hidden;
  transition: 0.3s ease-in-out;
  box-shadow: 0 0 10px rgba(0, 217, 255, 0.7), 0 0 20px rgba(0, 217, 255, 0.5);
}

.btn::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 300%;
  height: 300%;
  background: radial-gradient(circle, rgba(0, 217, 255, 0.5) 10%, transparent 60%);
  transition: 0.5s ease-out;
  transform: translate(-50%, -50%) scale(0);
}

.btn:hover::before {
  transform: translate(-50%, -50%) scale(1);
  opacity: 0;
}

.btn:hover {
  color: #fff;
  background: #00d9ff;
  box-shadow: 0 0 15px #00d9ff, 0 0 30px #00d9ff;
}
</style>

